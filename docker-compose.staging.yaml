version: "3.8"

services:
  db:
    image: postgres:16
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-passwd}
      POSTGRES_DB: db
      PGDATABASE: db
      PGPASSWORD: ${POSTGRES_PASSWORD:-passwd}
      PGUSER: ${POSTGRES_USER:-postgres}

  api:
    image: simple2b/naples-backend:latest
    restart: always
    command: sh ./start_api.sh
    environment:
      APP_ENV: production
      IS_API: "true"
      ALCHEMICAL_DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-passwd}@db:5432/db
    depends_on:
      - db
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.naples_api.rule=Host(`api.naples.simple2b.net`)"
      - "traefik.http.routers.naples_api.tls=true"
      - "traefik.http.routers.naples_api.tls.certresolver=myresolver"
  # front:
  #   image: simple2b/naples-front:latest
  #   restart: always
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.naples_front.rule=Host(`naples.simple2b.net`)"
  #     - "traefik.http.routers.naples_front.tls=true"
  #     - "traefik.http.routers.naples_front.tls.certresolver=myresolver"

  # front-prod:
  #   image: simple2b/naples-backend-front-prod:latest
  #   restart: always
  #   ports:
  #     - 127.0.0.1:${LOCAL_API_PORT:-3000}:3000

volumes:
  db_data:
